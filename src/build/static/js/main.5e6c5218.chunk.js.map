{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","components/ArticleList.js","pages/article-content.js","pages/NotFoundPage.js","components/CommentsList.js","components/UpvotesSection.js","components/AddCommentForm.js","pages/ArticlePage.js","pages/ArticlesListPage.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","AboutPage","ArticleList","articles","map","article","key","className","to","name","title","content","substring","NotFoundPage","CommentsList","comments","comment","username","text","UpvotesSection","articleName","upvotes","setArticleInfo","upvoteArticle","a","fetch","method","result","json","body","id","onClick","AddCommentForm","useState","setUserName","commentText","setCommentText","addComment","JSON","stringify","headers","value","onChange","e","target","rows","cols","ArticlePage","match","params","articleContent","find","articleInfo","useEffect","fetchData","otherArticles","filter","paragraph","ArticlesListPage","NavBar","App","path","component","exact","Component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5e6c5218.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\n\nconst HomePage = () => {\n  return (\n    <Fragment>\n      <h1>Welcome to my blog!</h1>\n      <p>Ullamco enim magna Lorem ea minim laboris anim ex aliqua culpa exercitation est est do. Occaecat ex ad eu non exercitation tempor est occaecat do Lorem irure. Excepteur nostrud Lorem qui labore qui aute magna consectetur. Quis veniam anim deserunt esse duis laboris nostrud qui voluptate amet mollit. Minim nisi laborum veniam tempor. Duis mollit excepteur consequat consectetur officia deserunt nulla dolore consequat. Mollit ullamco adipisicing elit ex culpa consequat dolore fugiat quis nulla.\n\n      Do aliquip nisi sit ad mollit fugiat enim reprehenderit. Mollit adipisicing aute deserunt nulla Lorem quis quis cupidatat ut. Adipisicing id nulla dolor anim sunt pariatur commodo proident culpa sit cupidatat veniam aliquip. Velit elit dolore ullamco cupidatat anim eu anim ea excepteur velit deserunt aliquip. Amet consectetur laborum mollit velit reprehenderit laborum nostrud enim nostrud voluptate ea.\n\n      Aliqua cillum cupidatat pariatur quis fugiat quis cillum. Excepteur exercitation do sint aute laboris. Ad velit quis eu ut dolor dolor quis labore nostrud irure occaecat nulla occaecat. Laborum enim dolore est eiusmod sit eiusmod culpa commodo dolore occaecat ullamco commodo voluptate.\n\n      Amet commodo qui enim excepteur. Cillum et nisi aliquip consectetur labore duis ipsum sint est id. Aliqua sunt aliquip proident ex veniam ullamco anim cupidatat aute magna. Veniam occaecat duis irure voluptate ipsum ut. Aliqua fugiat in occaecat exercitation cillum culpa pariatur fugiat eu exercitation.\n\n      Aliqua proident nostrud exercitation magna tempor dolore est ex veniam irure qui sit Lorem qui. Id proident eiusmod exercitation deserunt ea excepteur veniam voluptate excepteur sunt ut. Lorem mollit ullamco sunt aliquip duis esse aliqua ex adipisicing elit anim deserunt tempor commodo. Excepteur nulla eiusmod deserunt culpa minim. Excepteur Lorem ullamco tempor ea nostrud commodo ut incididunt sint ullamco.\n      </p>\n      <p>Ullamco enim magna Lorem ea minim laboris anim ex aliqua culpa exercitation est est do. Occaecat ex ad eu non exercitation tempor est occaecat do Lorem irure. Excepteur nostrud Lorem qui labore qui aute magna consectetur. Quis veniam anim deserunt esse duis laboris nostrud qui voluptate amet mollit. Minim nisi laborum veniam tempor. Duis mollit excepteur consequat consectetur officia deserunt nulla dolore consequat. Mollit ullamco adipisicing elit ex culpa consequat dolore fugiat quis nulla.\n\n      Do aliquip nisi sit ad mollit fugiat enim reprehenderit. Mollit adipisicing aute deserunt nulla Lorem quis quis cupidatat ut. Adipisicing id nulla dolor anim sunt pariatur commodo proident culpa sit cupidatat veniam aliquip. Velit elit dolore ullamco cupidatat anim eu anim ea excepteur velit deserunt aliquip. Amet consectetur laborum mollit velit reprehenderit laborum nostrud enim nostrud voluptate ea.\n\n      Aliqua cillum cupidatat pariatur quis fugiat quis cillum. Excepteur exercitation do sint aute laboris. Ad velit quis eu ut dolor dolor quis labore nostrud irure occaecat nulla occaecat. Laborum enim dolore est eiusmod sit eiusmod culpa commodo dolore occaecat ullamco commodo voluptate.\n\n      Amet commodo qui enim excepteur. Cillum et nisi aliquip consectetur labore duis ipsum sint est id. Aliqua sunt aliquip proident ex veniam ullamco anim cupidatat aute magna. Veniam occaecat duis irure voluptate ipsum ut. Aliqua fugiat in occaecat exercitation cillum culpa pariatur fugiat eu exercitation.\n\n      Aliqua proident nostrud exercitation magna tempor dolore est ex veniam irure qui sit Lorem qui. Id proident eiusmod exercitation deserunt ea excepteur veniam voluptate excepteur sunt ut. Lorem mollit ullamco sunt aliquip duis esse aliqua ex adipisicing elit anim deserunt tempor commodo. Excepteur nulla eiusmod deserunt culpa minim. Excepteur Lorem ullamco tempor ea nostrud commodo ut incididunt sint ullamco.\n      </p>\n      <p>Ullamco enim magna Lorem ea minim laboris anim ex aliqua culpa exercitation est est do. Occaecat ex ad eu non exercitation tempor est occaecat do Lorem irure. Excepteur nostrud Lorem qui labore qui aute magna consectetur. Quis veniam anim deserunt esse duis laboris nostrud qui voluptate amet mollit. Minim nisi laborum veniam tempor. Duis mollit excepteur consequat consectetur officia deserunt nulla dolore consequat. Mollit ullamco adipisicing elit ex culpa consequat dolore fugiat quis nulla.\n\n      Do aliquip nisi sit ad mollit fugiat enim reprehenderit. Mollit adipisicing aute deserunt nulla Lorem quis quis cupidatat ut. Adipisicing id nulla dolor anim sunt pariatur commodo proident culpa sit cupidatat veniam aliquip. Velit elit dolore ullamco cupidatat anim eu anim ea excepteur velit deserunt aliquip. Amet consectetur laborum mollit velit reprehenderit laborum nostrud enim nostrud voluptate ea.\n\n      Aliqua cillum cupidatat pariatur quis fugiat quis cillum. Excepteur exercitation do sint aute laboris. Ad velit quis eu ut dolor dolor quis labore nostrud irure occaecat nulla occaecat. Laborum enim dolore est eiusmod sit eiusmod culpa commodo dolore occaecat ullamco commodo voluptate.\n\n      Amet commodo qui enim excepteur. Cillum et nisi aliquip consectetur labore duis ipsum sint est id. Aliqua sunt aliquip proident ex veniam ullamco anim cupidatat aute magna. Veniam occaecat duis irure voluptate ipsum ut. Aliqua fugiat in occaecat exercitation cillum culpa pariatur fugiat eu exercitation.\n\n      Aliqua proident nostrud exercitation magna tempor dolore est ex veniam irure qui sit Lorem qui. Id proident eiusmod exercitation deserunt ea excepteur veniam voluptate excepteur sunt ut. Lorem mollit ullamco sunt aliquip duis esse aliqua ex adipisicing elit anim deserunt tempor commodo. Excepteur nulla eiusmod deserunt culpa minim. Excepteur Lorem ullamco tempor ea nostrud commodo ut incididunt sint ullamco.\n      </p>\n    </Fragment>\n  )\n}\n\nexport default HomePage;\n","import React, { Fragment } from 'react';\n\nconst AboutPage = () => {\n  return (\n    <Fragment>\n      <h1>About Me</h1>\n      <p>Et duis pariatur ex labore ipsum ullamco dolore pariatur ut laboris do officia. Tempor proident veniam cupidatat commodo voluptate nostrud eiusmod in reprehenderit. Id exercitation consequat mollit in officia voluptate eiusmod commodo labore Lorem laboris in eiusmod. Ea ea qui sunt minim cupidatat nostrud cillum cillum.\n\n      Ad elit ipsum sint ex do proident in incididunt aute mollit cillum. Anim qui sint qui commodo. Labore laboris ut duis ipsum irure. Minim laboris do proident pariatur ullamco do cillum ad. Aliquip quis reprehenderit velit aliquip eiusmod qui in qui cupidatat deserunt labore amet cillum aliqua. Mollit enim labore cupidatat anim ad do magna culpa consectetur. Proident sit pariatur in velit.\n\n      Sint ipsum aliquip amet eiusmod sit reprehenderit nulla do nulla ut anim mollit non. Eiusmod eu consectetur cupidatat consequat deserunt pariatur tempor veniam magna ea consequat. Sint dolore eiusmod irure nisi aute proident adipisicing laborum occaecat ex adipisicing. Do est adipisicing in voluptate culpa excepteur Lorem.\n\n      Voluptate anim proident veniam eu ex cupidatat est. Incididunt adipisicing laborum ipsum id eu excepteur duis do. Irure consectetur laboris tempor aliqua deserunt do. Sunt incididunt quis eu elit adipisicing ut. Adipisicing deserunt minim duis eiusmod duis deserunt cupidatat minim id labore Lorem.\n      </p>\n      <p>Et duis pariatur ex labore ipsum ullamco dolore pariatur ut laboris do officia. Tempor proident veniam cupidatat commodo voluptate nostrud eiusmod in reprehenderit. Id exercitation consequat mollit in officia voluptate eiusmod commodo labore Lorem laboris in eiusmod. Ea ea qui sunt minim cupidatat nostrud cillum cillum.\n\n      Ad elit ipsum sint ex do proident in incididunt aute mollit cillum. Anim qui sint qui commodo. Labore laboris ut duis ipsum irure. Minim laboris do proident pariatur ullamco do cillum ad. Aliquip quis reprehenderit velit aliquip eiusmod qui in qui cupidatat deserunt labore amet cillum aliqua. Mollit enim labore cupidatat anim ad do magna culpa consectetur. Proident sit pariatur in velit.\n\n      Sint ipsum aliquip amet eiusmod sit reprehenderit nulla do nulla ut anim mollit non. Eiusmod eu consectetur cupidatat consequat deserunt pariatur tempor veniam magna ea consequat. Sint dolore eiusmod irure nisi aute proident adipisicing laborum occaecat ex adipisicing. Do est adipisicing in voluptate culpa excepteur Lorem.\n\n      Voluptate anim proident veniam eu ex cupidatat est. Incididunt adipisicing laborum ipsum id eu excepteur duis do. Irure consectetur laboris tempor aliqua deserunt do. Sunt incididunt quis eu elit adipisicing ut. Adipisicing deserunt minim duis eiusmod duis deserunt cupidatat minim id labore Lorem.\n      </p>\n    </Fragment>\n  )\n}\n\nexport default AboutPage;","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst ArticleList = ({ articles }) => {\n  return (\n    <Fragment>\n      {articles.map((article, key) => (\n        <Link className=\"article-list-item\" key={key} to={`/article/${article.name}`}>\n          <h3>{article.title}</h3>\n          <p>{article.content[0].substring(0, 150)}...</p>\n        </Link>\n      ))}\n    </Fragment>\n  );\n};\n\nexport default ArticleList;","const articles = [\n  {\n      name: 'learn-react',\n      title: 'The Fastest Way to Learn React',\n      content: [\n          `Welcome! Today we're going to be talking about the fastest way to\n          learn React. We'll be discussing some topics such as proin congue\n          ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n          Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n          non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n          eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n          sodales purus euismod.`,\n          `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n          Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n          nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n          sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n          interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n          consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n          `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n          Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n          nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n          sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n          interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n          consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n      ]\n  },    {\n      name: 'learn-node',\n      title: 'How to Build a Node Server in 10 Minutes',\n      content: [\n          `In this article, we're going to be talking looking at a very quick way\n          to set up a Node.js server. We'll be discussing some topics such as proin congue\n          ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n          Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n          non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n          eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n          sodales purus euismod.`,\n          `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n          Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n          nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n          sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n          interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n          consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n          `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n          Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n          nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n          sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n          interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n          consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n      ]\n  },     {\n      name: 'my-thoughts-on-resumes',\n      title: 'My Thoughts on Resumes',\n      content: [\n          `Today is the day I talk about something which scares most people: resumes.\n          In reality, I'm not sure why people have such a hard time with proin congue\n          ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n          Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n          non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n          eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n          sodales purus euismod.`,\n          `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n          Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n          nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n          sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n          interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n          consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n          `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n          Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n          nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n          sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n          interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n          consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n      ]\n  },  \n];\n\nexport default articles;","import React, { Fragment } from 'react';\n\nconst NotFoundPage = () => {\n  return(\n    <Fragment>\n      <h1>Not Found Page</h1>\n    </Fragment>\n  )\n};\n\nexport default NotFoundPage;","import React, { Fragment } from 'react';\n\nconst CommentsList = ({ comments }) => {\n  // console.log(comments)\n  return(\n    <Fragment>\n      <h3>Comments</h3>\n      {\n        comments.map((comment, key ) => {\n         return <div key={key} className=\"comment\">\n            <h3>{comment.username}</h3>\n            <p>{comment.text}</p>\n          </div>\n        })\n      }\n    </Fragment>\n  )\n};\n\nexport default CommentsList;","import React, { Fragment } from 'react';\n\nconst UpvotesSection = ({ articleName, upvotes, setArticleInfo }) => {\n\n  const upvoteArticle = async () => {\n    const result = await fetch(`/api/articles/${articleName}/upvote`, {\n      method: \"post\"\n    });\n    const body = await result.json();\n    setArticleInfo(body)\n  };\n\n  return (\n    <Fragment>\n      <div id=\"upvotes-section\">\n        <button onClick={upvoteArticle}>Add Upvote</button>\n        <p>This post has been upvoted {upvotes} times</p>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default UpvotesSection;","import React, { Fragment, useState } from 'react';\n\nconst AddCommentForm = ({ articleName, setArticleInfo }) => {\n\n  const [ username, setUserName ] = useState('');\n  const [ commentText, setCommentText ] = useState('');\n\n  const addComment = async () => {\n    const result = await fetch(`/api/articles/${articleName}/add-comment`, {\n      method: 'post',\n      body: JSON.stringify({ username, text: commentText }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    const body = await result.json();\n    setArticleInfo(body);\n    setUserName('');\n    setCommentText('');\n  };\n\n  return (\n    <Fragment>\n      <div id=\"add-comment-form\">\n        <h3>Add a Comment</h3>\n        <label>\n          Name:\n          <input text=\"text\" value={username} onChange={(e) => setUserName(e.target.value)} />\n        </label>\n        <label>\n          Comment:\n          <textarea rows=\"4\" cols=\"50\" value={commentText} onChange={(e) => setCommentText(e.target.value)} />\n        </label>\n        <button onClick={() => addComment()} >Add Comment</button>\n      </div>\n    </Fragment>\n  )\n};\n\nexport default AddCommentForm;","import React, { Fragment, useState, useEffect } from 'react';\n\nimport ArticleList from '../components/ArticleList';\nimport articleContent from './article-content';\nimport NotFoundPage from './NotFoundPage';\nimport CommentsList from '../components/CommentsList';\nimport UpvotesSection from '../components/UpvotesSection';\nimport AddCommentForm from '../components/AddCommentForm';\n\nconst ArticlePage = ({ match }) => {\n\n  const name = match.params.name;\n  const article = articleContent.find(article => article.name === name);\n\n  const [articleInfo, setArticleInfo] = useState({\n    upvotes: 0,\n    comments: []\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(`/api/articles/${name}`);\n      const body = await result.json();\n      setArticleInfo(body)\n    } \n    fetchData();\n  },[name]);\n\n  if (!article) return <NotFoundPage />\n\n  const otherArticles = articleContent.filter(article => article.name !== name)\n\n  return (\n    <Fragment>\n      <h1>{article.title}</h1>\n      <UpvotesSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo} />\n      {article.content.map((paragraph, key) => {\n        return <p key={key} >{paragraph}</p>\n      })}\n      <CommentsList comments={articleInfo.comments} />\n      <AddCommentForm articleName={name} setArticleInfo={setArticleInfo} />\n      <h3>Other Articles</h3>\n      <ArticleList articles={otherArticles} />\n    </Fragment>\n  )\n}\n\nexport default ArticlePage;","import React, { Fragment } from 'react';\nimport articleContent from './article-content';\nimport Articlelist from '../components/ArticleList';\n\n\nconst ArticlesListPage = () => {\n  return (\n    <Fragment>\n    <h1>Articles</h1>\n      <Articlelist articles={articleContent} />\n    </Fragment>\n  )\n}\n\nexport default ArticlesListPage;","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom'\n\nconst NavBar = () => {\n  return(\n    <Fragment>\n      <nav>\n        <ul>\n          <li><Link to=\"/\">Home</Link></li>\n          <li><Link to=\"/about\">About</Link></li>\n          <li><Link to=\"/articles-list\">Articles</Link></li>\n        </ul>\n      </nav>\n    </Fragment>\n  )\n}\n\nexport default NavBar;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nimport HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\nimport ArticlePage from './pages/ArticlePage';\nimport ArticlesListPage from './pages/ArticlesListPage';\nimport NavBar from './NavBar';\nimport NotFoundPage from './pages/NotFoundPage';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <NavBar />\n          <div id=\"page-body\">\n            <Switch>\n              <Route path=\"/\" component={HomePage} exact />\n              <Route path=\"/about\" component={AboutPage} />\n              <Route path=\"/articles-list\" component={ArticlesListPage} />\n              <Route path=\"/article/:name\" component={ArticlePage} />\n              <Route component={NotFoundPage} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}